@model FanLi.Web.Areas.admin.Models.ProductsAddViewModel
    @using FanLi.Models
@{
    ViewBag.Title = "add";
}

<section>

    <div class="rightTab">
        <ul>
            <li><a href="/admin/Product/">产品列表</a></li>
            <li class="current"><a href="/admin/Product/add">添加产品</a></li>
            <li><a href="/admin/Product/listType">产品类型</a></li>
            <li><a href="/admin/Product/addType">添加产品类型</a></li>
        </ul>
    </div>
    <div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <ul class="ulColumn2">
                <li>
                    @Html.LabelFor(model => model.proName, new { @class = "item_name" })：

                    @Html.TextBoxFor(model => model.proName, new { @class = "textbox textbox_225" })
                    @Html.ValidationMessageFor(model => model.proName, "", new { @class = "errorTips" }) 

                </li>
                <li>
                    @Html.LabelFor(model => model.Pic, new { @class = "item_name" })：
                    @Html.TextBoxFor(model => model.Pic, new { @class = "textbox textbox_225" })
                    @Html.ValidationMessageFor(model => model.Pic, "", new { @class = "errorTips" })
                </li>
                <li>
                    @Html.LabelFor(model => model.OrigPrice, new { @class = "item_name" })：
                    @Html.TextBoxFor(model => model.OrigPrice, new { @class = "textbox textbox_225" })
                    @Html.ValidationMessageFor(model => model.OrigPrice, "", new { @class = "errorTips" })
                </li>
                <li>
                    @Html.LabelFor(model => model.Price, new { @class = "item_name" })：
                    @Html.TextBoxFor(model => model.Price, new { @class = "textbox textbox_225" })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "errorTips" })
                </li> 

                <li>
                    @Html.LabelFor(model => model.OfferPrice, new { @class = "item_name" })：

                    @Html.TextBoxFor(model => model.OfferPrice, new { @class = "textbox textbox_225" })
                    @Html.ValidationMessageFor(model => model.OfferPrice, "", new { @class = "errorTips" })

                </li>
                <li>
                    @Html.LabelFor(model => model.Score, new { @class = "item_name" })：
                    @Html.TextBoxFor(model => model.Score, new { @class = "textbox textbox_225" })
                    @Html.ValidationMessageFor(model => model.Score, "", new { @class = "errorTips" })
                </li>
                <li>
                    @Html.LabelFor(model => model.VipScore, new { @class = "item_name" })：
                    @Html.TextBoxFor(model => model.VipScore, new { @class = "textbox textbox_225" })
                    @Html.ValidationMessageFor(model => model.VipScore, "", new { @class = "errorTips" })
                </li>
                <li>
                    @Html.LabelFor(model => model.SellNum, new { @class = "item_name" })：
                    @Html.TextBoxFor(model => model.SellNum, new { @class = "textbox textbox_225" })
                    @Html.ValidationMessageFor(model => model.SellNum, "", new { @class = "errorTips" })
                </li>

                <li>
                    @Html.LabelFor(model => model.MallsId, new { @class = "item_name" })：
                    @Html.DropDownListFor(model => model.MallsId,Model.ListMalls)
                     
                </li>


                <li>
                    @Html.LabelFor(model => model.ProductTypeId, new { @class = "item_name" })：
                    <select id="ptypone">
                        <option value="0">请选择</option>
                        @{ List<ProductType> listtypeone = (List<ProductType>)ViewData["ptypone"]; }
                        @if (listtypeone != null && listtypeone.Count > 0)
                        {
                            foreach (ProductType item in listtypeone)
                            {
                                <option value="@item.Id">@item.tpName</option>
                            }
                        }
                    </select>
                    <select id="ptypetwo" style="display:none"> </select>
                    <select id="ptypethree" style="display:none"></select>
                    <input id="ProductTypeId" name="ProductTypeId" value="0" type="hidden" />
                    
                </li>
                @*<li>
                    @Html.LabelFor(model => model.IsCheck, new { @class = "item_name" })：
                    @Html.RadioButtonFor(model => model.IsCheck,0, new { @id = "rdocheck0", @name = "rdolstCheck" }) 未审核
                    @Html.RadioButtonFor(model => model.IsCheck, 1, new { @id = "rdocheck1", @name = "rdolstCheck" }) 审核通过
                    @Html.RadioButtonFor(model => model.IsCheck, 2, new { @id = "rdocheck2", @name = "rdolstCheck" }) 审核未通过
                </li>
                <li>
                    @Html.LabelFor(model => model.IsShow, new { @class = "item_name" })：
                    @Html.RadioButtonFor(model => model.IsShow, true, new { @id = "rdoshow0"}) 上架
                    @Html.RadioButtonFor(model => model.IsShow, false, new { @id = "rdoshow1" }) 下架
                </li>*@
                
                <li>
                    <span class="item_name" style="width: 120px;"></span>
                    <input type="submit" value="提交" class="btn btn-default" />
                </li>
            </ul>
        }
    </div>
    @section scripts{
        <script>

            $(document).ready(function () {
                $('#ptypone').on('change', function () {
                  
                    $("#ProductTypeId").val($(this).val());
                    $("#ptypetwo").show();
                    var ddl = $("#ptypetwo");
                    ddl.empty();
                    ddl.append("<option>--请选择--</option>");

                    $("#ptypethree").hide();
                    $("#ptypethree").empty();

                    ptypeselect(2, $(this).val());
                });
                $("#ptypetwo").on("change", function () {
                    
                    $("#ProductTypeId").val($(this).val());
                    $("#ptypethree").show();
                    var ddl = $("#ptypethree");
                    ddl.empty();
                    ddl.append("<option>--请选择--</option>");

                    ptypeselect(3, $(this).val());
                });

                $("#ptypethree").on("change", function () { 
                    $("#ProductTypeId").val($(this).val()); 
                });
            });
            function ptypeselect(level, pid) {
                $.ajax({
                    type: "POST",
                    url: "/admin/Product/GetproductType/",
                    data: { "level": level, "pid": pid },
                    dataType: "Json",
                    success: function (data) {
                        data = eval(data); //转成Json对象

                        if (data != "") {
                            $(data).each(function (key) {
                                var opt = $("<option></option>").text(data[key].tpName).val(data[key].id);
                                ddl.append(opt);

                            });
                        }

                    }
                });
            }
        </script>
    }
</section> 